name: API Gateway CI

on:
  workflow_call:
    secrets:
      inherit

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy

    - name: Cache cargo
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: api-gateway
        save-if: ${{ github.ref == 'refs/heads/main' }}

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Check formatting
      working-directory: api-gateway
      run: cargo fmt -- --check

    - name: Run clippy
      working-directory: api-gateway
      run: cargo clippy --all-targets --all-features -- -D warnings

    - name: Run tests
      working-directory: api-gateway
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
        SOLANA_RPC_URL: http://localhost:8899
      run: cargo test --verbose

    - name: Check docs
      working-directory: api-gateway
      run: cargo doc --no-deps --document-private-items

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: api-gateway

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      working-directory: api-gateway
      run: cargo audit

    - name: Run cargo deny
      working-directory: api-gateway
      run: |
        cargo install cargo-deny --locked
        cargo deny check

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable

    - name: Cache cargo
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: api-gateway

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Build
      working-directory: api-gateway
      run: cargo build --release --verbose

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: api-gateway-binary
        path: api-gateway/target/release/api-gateway
        retention-days: 1

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [test, build]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: api-gateway/Dockerfile
        push: false
        tags: p2p-api-gateway:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Test Docker image
      run: |
        docker run --rm \
          -e DATABASE_URL=postgresql://user:pass@localhost/db \
          -e REDIS_URL=redis://localhost:6379 \
          -e JWT_SECRET=test \
          -e SOLANA_RPC_URL=http://localhost:8899 \
          --entrypoint /usr/local/bin/api-gateway \
          p2p-api-gateway:latest --help

  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: llvm-tools-preview

    - name: Cache cargo
      uses: Swatinem/rust-cache@v2
      with:
        workspaces: api-gateway

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libpq-dev

    - name: Install cargo-llvm-cov
      run: cargo install cargo-llvm-cov

    - name: Generate coverage report
      working-directory: api-gateway
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        REDIS_URL: redis://localhost:6379
        JWT_SECRET: test-secret
        SOLANA_RPC_URL: http://localhost:8899
      run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: api-gateway/lcov.info
        flags: api-gateway
        name: api-gateway-coverage
        fail_ci_if_error: false