FROM rust:1.83-bookworm

# Install basic dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    clang \
    cmake \
    curl \
    git \
    jq \
    libssl-dev \
    pkg-config \
    protobuf-compiler \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Rust WASM target and cargo-contract
RUN rustup target add wasm32-unknown-unknown
RUN rustup component add clippy
RUN rustup component add rust-src
RUN cargo install --force --locked cargo-contract --version 5.0.3

# Build substrate-contracts-node from source for compatibility
RUN git clone --branch v0.42.0 --depth 1 https://github.com/paritytech/substrate-contracts-node.git /tmp/substrate-contracts-node && \
    cd /tmp/substrate-contracts-node && \
    RUSTFLAGS="-C target-cpu=native" cargo build --release && \
    mv target/release/substrate-contracts-node /usr/local/bin/ && \
    cd / && \
    rm -rf /tmp/substrate-contracts-node

WORKDIR /contracts

# Copy contract source
COPY contracts ./contracts

# Create a contracts-only Cargo.toml workspace
RUN echo '[workspace]' > Cargo.toml && \
    echo 'resolver = "2"' >> Cargo.toml && \
    echo '' >> Cargo.toml && \
    echo 'members = [' >> Cargo.toml && \
    echo '    "contracts/registry",' >> Cargo.toml && \
    echo '    "contracts/grid-token",' >> Cargo.toml && \
    echo '    "contracts/trading",' >> Cargo.toml && \
    echo '    "contracts/oracle-client",' >> Cargo.toml && \
    echo ']' >> Cargo.toml && \
    echo '' >> Cargo.toml && \
    echo '[workspace.dependencies]' >> Cargo.toml && \
    echo 'ink = { version = "5.1.1", default-features = false }' >> Cargo.toml && \
    echo 'scale = { package = "parity-scale-codec", version = "3.7.5", default-features = false, features = ["derive"] }' >> Cargo.toml && \
    echo 'scale-info = { version = "2.11.6", default-features = false, features = ["derive"] }' >> Cargo.toml && \
    echo 'openbrush = { version = "4.0.0-beta", default-features = false }' >> Cargo.toml

# Build contracts
RUN cd contracts/registry && cargo contract build --release
RUN cd contracts/grid-token && cargo contract build --release  
RUN cd contracts/trading && cargo contract build --release
RUN cd contracts/oracle-client && cargo contract build --release

# Copy deployment script
COPY docker/contracts/deploy_contracts.sh /contracts/
RUN chmod +x deploy_contracts.sh

EXPOSE 9944 9933 30333

CMD ["./deploy_contracts.sh"]
